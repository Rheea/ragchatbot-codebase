USER QUERY PROCESSING FLOW - DETAILED ASCII DIAGRAM
===================================================

┌─────────────┐                    ┌─────────────────────────────────────────────────────┐
│    USER     │                    │                  FRONTEND                           │
│             │                    │                script.js                           │
│ Types query │                    │                                                     │
│ Clicks send │                    │  sendMessage() function                            │
└─────────────┘                    │  • chatInput.value.trim()                         │
       │                           │  • Disable input, show loading                    │
       │ "What is MCP?"            │  • addMessage(query, 'user')                     │
       └──────────────────────────▶│  • createLoadingMessage()                        │
                                   └─────────────────┬───────────────────────────────────┘
                                                     │
                                                     │ HTTP POST /api/query
                                                     │ Content-Type: application/json
                                                     │ Body: {
                                                     │   "query": "What is MCP?",
                                                     │   "session_id": "uuid-123" | null
                                                     │ }
                                                     ▼
                   ┌─────────────────────────────────────────────────────┐
                   │                FASTAPI BACKEND                      │
                   │                   app.py                           │
                   │                                                     │
                   │  @app.post("/api/query")                           │
                   │  async def query_documents(request: QueryRequest)   │
                   │  • QueryRequest(query, session_id)                 │
                   │  • session_manager.create_session() if needed      │
                   └─────────────────┬───────────────────────────────────┘
                                     │
                                     │ rag_system.query(
                                     │   query="What is MCP?",
                                     │   session_id="uuid-123"
                                     │ )
                                     ▼
                                     │
                                     ▼
                   ┌─────────────────────────────────────────────────────┐
                   │              RAG SYSTEM ORCHESTRATOR                │
                   │               (rag_system.py)                      │
                   │                                                     │
                   │  1. Get conversation history ──────────┐            │
                   │  2. Call AI generator with tools       │            │
                   │  3. Extract sources from tool manager  │            │
                   │  4. Update session history             │            │
                   └─────────────────┬──────────────────────┼────────────┘
                                     │                      │
                                     ▼                      ▼
        ┌────────────────────────────────────┐    ┌──────────────────┐
        │         AI GENERATOR               │    │ SESSION MANAGER  │
        │        (ai_generator.py)           │    │                  │
        │                                    │    │ • Store chat     │
        │ • Build system prompt with history │    │   history        │
        │ • Call Claude API with tools       │    │ • Manage user    │
        │ • Handle tool execution if needed  │    │   sessions       │
        │ • Return final response            │    │ • Context window │
        └────────────────┬───────────────────┘    └──────────────────┘
                         │
                         ▼
        ┌─────────────────────────────────────────────────────────────┐
        │              ANTHROPIC CLAUDE API                           │
        │                                                             │
        │  Claude Decision Tree:                                      │
        │                                                             │
        │     "Do I need to search course materials?"                 │
        │                    │                                        │
        │          ┌─────────┴─────────┐                             │
        │          │                   │                             │
        │         YES                 NO                              │
        │          │                   │                             │
        │          ▼                   ▼                             │
        │   Use search tool    Use general knowledge                  │
        │          │                   │                             │
        │          └─────────┬─────────┘                             │
        │                    │                                        │
        │              Generate Response                               │
        └─────────────────────┬───────────────────────────────────────┘
                              │
                    ┌─────────┴─────────┐
                    │                   │
                   YES                 NO
                    │                   │
                    ▼                   │
        ┌─────────────────────────────┐ │
        │       TOOL MANAGER          │ │
        │    (search_tools.py)        │ │
        │                             │ │
        │ • Execute search tool       │ │
        │ • Track sources for citation│ │
        │ • Format search results     │ │
        └─────────────┬───────────────┘ │
                      │                 │
                      ▼                 │
        ┌─────────────────────────────┐ │
        │      VECTOR STORE           │ │
        │    (ChromaDB Interface)     │ │
        │                             │ │
        │ • Semantic search           │ │
        │ • Apply course/lesson filters│ │
        │ • Return relevant chunks    │ │
        └─────────────┬───────────────┘ │
                      │                 │
                      ▼                 │
        ┌─────────────────────────────┐ │
        │        CHROMADB             │ │
        │    (Vector Database)        │ │
        │                             │ │
        │ • Store course chunks       │ │
        │ • Embedding-based search    │ │
        │ • Metadata filtering        │ │
        └─────────────────────────────┘ │
                                        │
        ┌───────────────────────────────┘
        │
        ▼
┌───────────────────────────────────────────────────────────────────────┐
│                           RESPONSE FLOW                               │
│                                                                       │
│  Search Results ──┐                                                   │
│      OR           ├──▶ Claude Final Response ──┐                     │
│  General Knowledge──┘                           │                     │
│                                                 ▼                     │
│                                        ┌──────────────────┐           │
│                                        │   RAG SYSTEM     │           │
│                                        │                  │           │
│                                        │ • Extract sources │           │
│                                        │ • Update session │           │
│                                        │ • Return response │           │
│                                        └────────┬─────────┘           │
│                                                 │                     │
│                                                 ▼                     │
│                                        ┌──────────────────┐           │
│                                        │    FASTAPI       │           │
│                                        │                  │           │
│                                        │ • JSON response  │           │
│                                        │ • Include sources │           │
│                                        │ • Session ID     │           │
│                                        └────────┬─────────┘           │
│                                                 │                     │
│                                                 ▼                     │
│                                        ┌──────────────────┐           │
│                                        │   FRONTEND       │           │
│                                        │                  │           │
│                                        │ • Remove loading │           │
│                                        │ • Display answer │           │
│                                        │ • Show sources   │           │
│                                        │ • Re-enable input│           │
│                                        └──────────────────┘           │
└───────────────────────────────────────────────────────────────────────┘


DOCUMENT PROCESSING PIPELINE (Initialization)
=============================================

┌─────────────────┐    ┌──────────────────────┐    ┌─────────────────────┐
│   Course Docs   │───▶│  Document Processor  │───▶│   Text Chunks       │
│                 │    │                      │    │                     │
│ • course1.txt   │    │ • Parse metadata     │    │ • Sentence-based    │
│ • course2.txt   │    │ • Extract lessons    │    │ • With overlap      │
│ • course3.txt   │    │ • Chunk content      │    │ • Context-enriched  │
│ • course4.txt   │    │ • Add lesson context │    │                     │
└─────────────────┘    └──────────────────────┘    └─────────┬───────────┘
                                                             │
                                                             ▼
                                              ┌─────────────────────────────┐
                                              │       ChromaDB Storage      │
                                              │                             │
                                              │ • Vector embeddings         │
                                              │ • Course metadata           │
                                              │ • Searchable chunks         │
                                              │ • Source tracking           │
                                              └─────────────────────────────┘


KEY FEATURES HIGHLIGHTED
========================

🔄 SESSION MANAGEMENT: Maintains conversation context across queries
🧠 INTELLIGENT TOOLS: Claude decides when to search vs use general knowledge  
📚 SEMANTIC SEARCH: Vector-based search with course/lesson filtering
📝 SOURCE TRACKING: Citations from retrieved course materials
⚡ REAL-TIME UI: Loading states and progressive enhancement
🛡️ ERROR HANDLING: Graceful fallbacks at every layer